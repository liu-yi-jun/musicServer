
var ref = require("ref");
var ffi = require("ffi");
var ArrayType = require('ref-array')

var double = ref.types.double
var DoubleArray = ArrayType(double)

var data = new DoubleArray([0, 0, -3.0517578125e-05, 0, 0, 0, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.0517578125e-05, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 3.0517578125e-05, 0, 0, 0, 3.0517578125e-05, 3.0517578125e-05, 0, 0, 0, -3.0517578125e-05, 3.0517578125e-05, 3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 3.0517578125e-05, 0, 0, 0, 3.0517578125e-05, 0, 0, 0, 0, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3.0517578125e-05, -3.0517578125e-05, -3.0517578125e-05, 0, 0, 0, 0, -3.0517578125e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.0517578125e-05, 0, 3.0517578125e-05, -3.0517578125e-05, 0, 0, 0, 0, 3.0517578125e-05, 3.0517578125e-05, 0, 0, 0, -6.103515625e-05, -3.0517578125e-05, -3.0517578125e-05, -3.0517578125e-05, -3.0517578125e-05, 0, 3.0517578125e-05, 6.103515625e-05, 6.103515625e-05, 6.103515625e-05, 6.103515625e-05, 3.0517578125e-05, -3.0517578125e-05, -6.103515625e-05, -9.1552734375e-05, -9.1552734375e-05, -9.1552734375e-05, -6.103515625e-05, -3.0517578125e-05, 3.0517578125e-05, 3.0517578125e-05, 9.1552734375e-05, 9.1552734375e-05, 9.1552734375e-05, 6.103515625e-05, 3.0517578125e-05, -3.0517578125e-05, -9.1552734375e-05, -9.1552734375e-05, -0.0001220703125, -0.0001220703125, -9.1552734375e-05, -3.0517578125e-05, 0, 9.1552734375e-05, 0.0001220703125, 9.1552734375e-05, 0.0001220703125, 0.0001220703125, 3.0517578125e-05, -6.103515625e-05, -0.0001220703125, -0.000152587890625, -0.00018310546875, -0.00018310546875, -0.0001220703125, 0, 9.1552734375e-05, 0.000152587890625, 0.00018310546875, 0.000213623046875, 0.00018310546875, 9.1552734375e-05, 0, -0.0001220703125, -0.00018310546875, -0.000244140625, -0.000213623046875, -0.00018310546875, -6.103515625e-05, 6.103515625e-05, 0.00018310546875, 0.000244140625, 0.000244140625, 0.000244140625, 0.000152587890625, 9.1552734375e-05, -3.0517578125e-05, -0.000152587890625, -0.000213623046875, -0.000244140625, -0.000244140625, -0.00018310546875, -6.103515625e-05, 3.0517578125e-05, 9.1552734375e-05, 0.000213623046875, 0.000274658203125, 0.00030517578125, 0.000274658203125, 0.00018310546875, 3.0517578125e-05, -0.0001220703125, -0.000244140625, -0.0003662109375, -0.00042724609375, -0.000335693359375, -0.000213623046875, -3.0517578125e-05, 0.000213623046875, 0.00042724609375, 0.000579833984375, 0.0006103515625, 0.000518798828125, 0.000244140625, -6.103515625e-05, -0.000396728515625, -0.00067138671875, -0.00079345703125, -0.000732421875, -0.000457763671875, -9.1552734375e-05, 0.000396728515625, 0.000762939453125, 0.001007080078125, 0.0009765625, 0.00079345703125, 0.000335693359375, -0.00018310546875, -0.000732421875, -0.001007080078125, -0.001220703125, -0.000885009765625, -0.0006103515625, 0.000152587890625, 0.000579833984375, 0.001190185546875, 0.00128173828125, 0.00128173828125, 0.00079345703125, 0.0001220703125, -0.000396728515625, -0.00140380859375, -0.0010986328125, -0.00238037109375, 0.000213623046875, -0.00921630859375, 0.00408935546875, 0.011383056640625, 0.004364013671875, 0.0032958984375, -0.000579833984375, -0.0028076171875, -0.00408935546875, -0.005096435546875, -0.00775146484375, -0.00567626953125, -0.004730224609375, -0.002349853515625, -0.00018310546875, 0.0042724609375, 0.004913330078125, 0.00701904296875, 0.007965087890625, 0.0074462890625, 0.007568359375, 0.00445556640625, -0.001373291015625, -0.001007080078125, -0.002410888671875, -0.005096435546875, -0.00640869140625, -0.00830078125, -0.008331298828125, -0.003936767578125, -0.002716064453125, -0.001800537109375, 0.003021240234375, 0.00189208984375, 0.00360107421875, 0.005279541015625, 0.00714111328125, 0.005279541015625, 0.00518798828125, 0.004974365234375, 0.00299072265625, -0.000732421875, -0.00244140625, -0.00372314453125, -0.004638671875, -0.00616455078125, -0.007720947265625, -0.0089111328125, -0.007598876953125, -0.002197265625, -0.003570556640625, 0.00238037109375, 0.007049560546875, 0.0072021484375, 0.01092529296875, 0.009796142578125, 0.007720947265625, 0.009002685546875, 0.00775146484375, -0.000152587890625, -0.00592041015625, -0.00848388671875, -0.012298583984375, -0.01263427734375, -0.011505126953125, -0.010589599609375, -0.009979248046875, -0.0057373046875, 0.000152587890625, 0.0025634765625, 0.00787353515625, 0.010406494140625, 0.011871337890625, 0.01629638671875, 0.014556884765625, 0.011688232421875, 0.006561279296875, 0.002410888671875, -0.00323486328125, -0.008331298828125, -0.01190185546875, -0.014312744140625, -0.0166015625, -0.016143798828125, -0.01129150390625, -0.008758544921875, -0.001007080078125, 0.0045166015625, 0.009521484375, 0.014984130859375, 0.017120361328125, 0.01849365234375, 0.01739501953125, 0.014739990234375, 0.011474609375, 0.004669189453125, -0.003692626953125, -0.009429931640625, -0.013153076171875, -0.0185546875, -0.021270751953125, -0.0189208984375, -0.015350341796875, -0.0093994140625, -0.00457763671875, 0.0009765625, 0.0086669921875, 0.01226806640625, 0.017974853515625, 0.018096923828125, 0.016357421875, 0.0147705078125, 0.01055908203125, 0.004974365234375, 0.00018310546875, -0.006744384765625, -0.012847900390625, -0.01629638671875, -0.019744873046875, -0.021392822265625, -0.01788330078125, -0.011962890625, -0.004852294921875, 0.001556396484375, 0.006439208984375, 0.0130615234375, 0.01641845703125, 0.016815185546875, 0.016998291015625, 0.01727294921875, 0.01397705078125, 0.009002685546875, 0.000885009765625, -0.004730224609375, -0.011505126953125, -0.018829345703125, -0.019195556640625, -0.01898193359375, -0.0146484375, -0.015106201171875, -0.01007080078125, -9.1552734375e-05, 0.0054931640625, 0.013946533203125, 0.01727294921875, 0.01806640625, 0.017486572265625, 0.01629638671875, 0.013214111328125, 0.00750732421875, 0.00091552734375, -0.00482177734375, -0.010589599609375, -0.01605224609375, -0.01806640625, -0.0198974609375, -0.016204833984375, -0.012969970703125, -0.009307861328125, -0.000335693359375, 0.0059814453125, 0.01239013671875, 0.01885986328125, 0.01983642578125, 0.02044677734375, 0.017486572265625, 0.01507568359375, 0.0103759765625, 0.0035400390625, -0.003662109375, -0.011993408203125, -0.0179443359375, -0.022979736328125, -0.02294921875, -0.02166748046875, -0.015045166015625, -0.01141357421875, -0.003173828125, 0.0059814453125, 0.0126953125, 0.0174560546875, 0.020599365234375, 0.021728515625, 0.020294189453125, 0.0189208984375, 0.011627197265625, 0.003143310546875, -0.005706787109375, -0.011322021484375, -0.017852783203125, -0.020904541015625, -0.021209716796875, -0.02227783203125, -0.020355224609375, -0.014556884765625, -0.006439208984375, 0.00311279296875, 0.012115478515625, 0.0179443359375, 0.0225830078125, 0.0257568359375, 0.024078369140625, 0.021575927734375, 0.017120361328125, 0.0072021484375, -0.00244140625, -0.01263427734375, -0.02032470703125, -0.02667236328125, -0.027130126953125, -0.02838134765625, -0.024627685546875, -0.016937255859375, -0.010589599609375, -0.001312255859375, 0.009124755859375, 0.021026611328125, 0.028106689453125, 0.02880859375, 0.031097412109375, 0.029815673828125, 0.0213623046875, 0.00970458984375, 6.103515625e-05, -0.01141357421875, -0.02197265625, -0.02813720703125, -0.030914306640625, -0.03094482421875, -0.025238037109375, -0.017608642578125, -0.011199951171875, -0.000457763671875, 0.00946044921875, 0.020172119140625, 0.02618408203125, 0.031341552734375, 0.032318115234375, 0.03143310546875, 0.02593994140625, 0.01715087890625, 0.00225830078125, -0.00848388671875, -0.018096923828125, -0.027374267578125, -0.03436279296875, -0.035980224609375, -0.031524658203125, -0.02490234375, -0.01580810546875, -0.006500244140625, 0.0091552734375, 0.016754150390625, 0.025787353515625, 0.032470703125, 0.03436279296875, 0.034637451171875, 0.02838134765625, 0.018463134765625, 0.007843017578125, -0.00750732421875, -0.021392822265625, -0.030181884765625, -0.036041259765625, -0.037567138671875, -0.035064697265625, -0.028350830078125, -0.0167236328125, -0.002716064453125, 0.006866455078125, 0.02044677734375, 0.028900146484375, 0.033172607421875, 0.03662109375, 0.03436279296875, 0.0247802734375, 0.015472412109375, 0.008148193359375, -0.004547119140625, -0.018096923828125, -0.02716064453125, -0.033111572265625, -0.034576416015625, -0.03350830078125, -0.027008056640625, -0.0189208984375, -0.005828857421875, 0.00732421875, 0.0167236328125, 0.026397705078125, 0.031707763671875, 0.03253173828125, 0.031829833984375, 0.025634765625, 0.016204833984375, 0.0081787109375, -0.004302978515625, -0.01556396484375, -0.023162841796875, -0.02911376953125, -0.032562255859375, -0.028717041015625, -0.02520751953125, -0.01983642578125, -0.008636474609375, 0.00311279296875, 0.013671875, 0.024139404296875, 0.0299072265625, 0.02880859375, 0.028106689453125, 0.0257568359375, 0.02020263671875, 0.010345458984375, -0.0029296875, -0.012847900390625, -0.02069091796875, -0.027252197265625, -0.03375244140625, -0.0325927734375, -0.028533935546875, -0.02197265625, -0.009735107421875, 0.001739501953125, 0.012542724609375, 0.021453857421875, 0.0302734375, 0.0345458984375, 0.033935546875, 0.029510498046875, 0.0224609375, 0.01300048828125, 0.00079345703125, -0.010711669921875, -0.021484375, -0.03143310546875, -0.0361328125, -0.035614013671875, -0.034271240234375, -0.023193359375, -0.013885498046875, -0.001495361328125, 0.01171875, 0.024749755859375, 0.031982421875, 0.03668212890625, 0.038421630859375, 0.034423828125, 0.02581787109375, 0.01434326171875, 0.001007080078125, -0.01123046875, -0.02447509765625, -0.0357666015625, -0.040496826171875, -0.038604736328125, -0.033172607421875, -0.028411865234375, -0.014190673828125, -0.003631591796875, 0.010345458984375, 0.024658203125, 0.03411865234375, 0.03863525390625, 0.03948974609375, 0.038482666015625, 0.0313720703125, 0.019775390625, 0.004638671875, -0.00994873046875, -0.023040771484375, -0.033447265625, -0.0400390625, -0.037567138671875, -0.036773681640625, -0.030059814453125, -0.01800537109375, -0.00469970703125, 0.007415771484375, 0.017303466796875, 0.030029296875, 0.037689208984375, 0.039093017578125, 0.03851318359375, 0.03179931640625, 0.0216064453125, 0.0084228515625, -0.007843017578125, -0.021636962890625, -0.0318603515625, -0.040557861328125, -0.043243408203125, -0.039642333984375, -0.034820556640625, -0.02386474609375, -0.008270263671875, 0.005523681640625, 0.018218994140625, 0.03179931640625, 0.0394287109375, 0.041107177734375, 0.041168212890625, 0.035186767578125, 0.025909423828125, 0.011627197265625, -0.001800537109375, -0.015167236328125, -0.02947998046875, -0.03717041015625, -0.04083251953125, -0.0419921875, -0.036163330078125, -0.02667236328125, -0.013671875, 0.001007080078125, 0.014404296875, 0.02886962890625, 0.036102294921875, 0.0401611328125, 0.039764404296875, 0.034515380859375, 0.025360107421875, 0.0118408203125, 0.00054931640625, -0.011260986328125, -0.023223876953125, -0.033538818359375, -0.037872314453125, -0.038116455078125, -0.03558349609375, -0.026397705078125, -0.01385498046875, -0.0020751953125, 0.011138916015625, 0.02349853515625, 0.032196044921875, 0.036590576171875, 0.036865234375, 0.033355712890625, 0.02569580078125, 0.0145263671875, 0.002685546875, -0.0101318359375, -0.022674560546875, -0.031341552734375, -0.035919189453125, -0.03558349609375, -0.031768798828125, -0.025604248046875, -0.014801025390625, -0.00152587890625, 0.011199951171875, 0.021026611328125, 0.030242919921875, 0.03717041015625, 0.038299560546875, 0.035430908203125, 0.027130126953125, 0.0162353515625, 0.00537109375, -0.0093994140625, -0.025146484375, -0.035247802734375, -0.038665771484375, -0.03875732421875, -0.038330078125, -0.030029296875, -0.016510009765625, -0.001129150390625, 0.010498046875, 0.02197265625, 0.0350341796875, 0.041351318359375, 0.040740966796875, 0.037322998046875, 0.0330810546875, 0.019073486328125, 0.00433349609375, -0.009979248046875, -0.024566650390625, -0.03582763671875, -0.0438232421875, -0.045989990234375, -0.04205322265625, -0.033935546875, -0.0205078125, -0.00494384765625, 0.0101318359375, 0.022308349609375, 0.035064697265625, 0.042572021484375, 0.04315185546875, 0.042816162109375, 0.037078857421875, 0.024383544921875, 0.009063720703125, -0.004852294921875, -0.023193359375, -0.032989501953125, -0.04290771484375, -0.044097900390625, -0.0426025390625, -0.0360107421875, -0.02191162109375, -0.01226806640625, 0.004791259765625, 0.019134521484375, 0.034271240234375, 0.040924072265625, 0.04412841796875, 0.042510986328125, 0.037109375, 0.02581787109375, 0.00738525390625, -0.00494384765625, -0.0177001953125, -0.030975341796875, -0.042572021484375, -0.044677734375, -0.04266357421875, -0.03680419921875, -0.02581787109375, -0.011627197265625, 0.003997802734375, 0.017333984375, 0.02886962890625, 0.037750244140625, 0.04315185546875, 0.04339599609375])
// console.log(data);
var detail = new DoubleArray([0, 0, 0])
var tone = ['C', '#C', 'D', '#D', 'E', 'F', '#F', 'G', '#G', 'A', '#A', 'B'];

var MyLibrary = ffi.Library('C:/Users/Administrator/Desktop/new/Codefield/TestTone-NodeJS/Dll/return_fin_result1221.dll', {
    "return_result": ['double', [DoubleArray, 'double']],
    "return_detail": [DoubleArray, ['double', DoubleArray]]
});

// var rtn = MyLibrary.return_result(data, 8000)
// MyLibrary.return_detail(rtn, detail)

// console.log(' Frequency: ', rtn, '\n', 'Pitch Names: ', tone[parseInt(detail[1]) - 1], '\n', 'Group: ', detail[0], '\n', 'Cent: ', detail[2])


var express = require('express');
var router = express.Router();
var db = require('../db/db');
let util = require('../util/util')

router.post('/share', (req, res, next) => {
    let { table, id } = req.body
    db.selfInOrDe(table, 'share', 'id', id, true).then(result => res.json(util.success(result))).catch(err => next(err))
})
router.get('/allTopic', (req, res, next) => {
    let sql = 'select * FROM topic'
    db.coreQuery(sql).then(result => res.json(util.success(result))).catch(err => next(err))
})

router.get('/getNotice', (req, res, next) => {
    let userId = req.query.userId
    db.multipleQuery('notice', { otherId: userId, isNew: 1 }).then(result => res.json(util.success(result))).catch(err => next(err))
})

router.post('/analysis', (req, res, next) => {
    // newArray =  Array.apply([], newArray)
    let endArry = req.body.endArry
    var rtn = MyLibrary.return_result(new DoubleArray(endArry), 8000)

    MyLibrary.return_detail(rtn, detail)
    console.log(' Frequency: ', rtn, '\n', 'Pitch Names: ', tone[parseInt(detail[1]) - 1], '\n', 'Group: ', detail[0], '\n', 'Cent: ', detail[2])
    res.json(util.success(req.body))
})


module.exports = router;